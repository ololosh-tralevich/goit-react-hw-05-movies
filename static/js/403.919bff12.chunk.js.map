{"version":3,"file":"static/js/403.919bff12.chunk.js","mappings":"+LACA,EAA4B,6BAA5B,EAAwE,gCAAxE,EAA0H,mCAA1H,EAAyK,6B,SC4CzK,EAvCkB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACpBC,GAAOC,EAAAA,EAAAA,MACPC,EAAaJ,EAAMK,KAAI,SAAAC,GAC3B,OACE,eACEC,UAAWC,EAEXC,QAAS,kBAAMR,EAAWK,EAAKI,KAHjC,UAKE,UAAC,KAAD,CAAMC,GAAE,kBAAaL,EAAKI,IAAME,MAAO,CAAEV,KAAMA,GAA/C,UACGI,EAAKO,aACJ,gBACEN,UAAWC,EACXM,IAAG,yCAAoCR,EAAKO,aAC5CE,IAAI,cACJC,QAAQ,UAGV,gBACET,UAAWC,EACXM,IAAI,mKACJC,IAAI,cACJC,QAAQ,SAIXV,EAAKW,OACJ,eAAIV,UAAWC,EAAf,SAAiCF,EAAKW,SAEtC,eAAIV,UAAWC,EAAf,SAAiCF,EAAKY,oBAvBrCZ,EAAKI,OA8BhB,OAAO,eAAIH,UAAWC,EAAf,SAAiCJ,M,4JCQ1C,EA1CuB,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,WACxB,GAAkCkB,EAAAA,EAAAA,UAAS,CACzCnB,MAAO,GACPoB,OAAO,EACPJ,SAAS,IAHX,eAAOK,EAAP,KAAkBC,EAAlB,KADyC,wCAYzC,2FACEA,GAAa,SAAAC,GACX,OAAO,kBAAKA,GAAZ,IAAuBP,SAAS,OAFpC,mBAKuBQ,EAAAA,EAAAA,MALvB,OAKUC,EALV,OAMIH,EAAa,CACXtB,MAAOyB,EAAKC,QACZV,SAAS,EACTI,OAAO,IATb,gDAYIO,QAAQC,IAAR,MACAN,GAAa,SAAAC,GACX,OAAO,kBAAKA,GAAZ,IAAuBH,OAAO,EAAMJ,SAAS,OAdnD,0DAZyC,sBA+BzC,OAxBAa,EAAAA,EAAAA,YAAU,YAP+B,mCAQvCC,KAEC,KAsBD,gCACGT,EAAUL,UAAW,yCACrBK,EAAUD,QAAS,oDACnBW,QAAQV,EAAUrB,MAAMgC,UACvB,SAACC,EAAA,EAAD,CAAWjC,MAAOqB,EAAUrB,MAAOC,WAAYA,QClCvD,EANiB,SAAC,GAAkB,IAAjBA,EAAgB,EAAhBA,WACf,OACI,SAAC,EAAD,CAAgBA,WAAYA","sources":["webpack://react-homework-template/./src/components/FilmsList/filmsList.module.css?5d6b","components/FilmsList/FilmsList.jsx","components/TrendingMovies/TrendingMovies.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmsList\":\"filmsList_filmsList__e6In1\",\"filmListItem\":\"filmsList_filmListItem__ijVlF\",\"filmListItemImg\":\"filmsList_filmListItemImg__XsFgq\",\"filmTitle\":\"filmsList_filmTitle__WigaF\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport style from './filmsList.module.css';\n\nconst FilmsList = ({ films, filmIdFunc }) => {\n  const from = useLocation();\n  const partOfCode = films.map(film => {\n    return (\n      <li\n        className={style.filmListItem}\n        key={film.id}\n        onClick={() => filmIdFunc(film.id)}\n      >\n        <Link to={`/movies/${film.id}`} state={{ from: from }}>\n          {film.poster_path ? (\n            <img\n              className={style.filmListItemImg}\n              src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n              alt=\"Film Poster\"\n              loading=\"lazy\"\n            ></img>\n          ) : (\n            <img\n              className={style.filmListItemImg}\n              src=\"https://media.istockphoto.com/vectors/no-image-available-icon-vector-id1216251206?k=20&m=1216251206&s=170667a&w=0&h=A72dFkHkDdSfmT6iWl6eMN9t_JZmqGeMoAycP-LMAw4=\"\n              alt=\"Film Poster\"\n              loading=\"lazy\"\n            ></img>\n          )}\n\n          {film.title ? (\n            <h4 className={style.filmTitle}>{film.title}</h4>\n          ) : (\n            <h4 className={style.filmTitle}>{film.original_name}</h4>\n          )}\n        </Link>\n      </li>\n    );\n  });\n\n  return <ul className={style.filmsList}>{partOfCode}</ul>;\n};\n\nexport default FilmsList;\n\nFilmsList.propTypes = {\n  filmIdFunc: PropTypes.func.isRequired,\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      original_name: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport FilmsList from '../FilmsList/FilmsList';\n\nimport { getTrendingFilms } from '../../shared/services/fetchFilms';\n\nconst TrendingMovies = ({ filmIdFunc }) => {\n  const [filmsData, setFilmsData] = useState({\n    films: [],\n    error: false,\n    loading: false,\n  });\n\n  useEffect(() => {\n    takeFetchData();\n    //eslint-disable-next-line\n  }, []);\n\n  async function takeFetchData() {\n    setFilmsData(prevState => {\n      return { ...prevState, loading: true };\n    });\n    try {\n      const data = await getTrendingFilms();\n      setFilmsData({\n        films: data.results,\n        loading: false,\n        error: false,\n      });\n    } catch (err) {\n      console.log(err);\n      setFilmsData(prevState => {\n        return { ...prevState, error: true, loading: false };\n      });\n    }\n  }\n\n  return (\n    <>\n      {filmsData.loading && <h2>Searching...</h2>}\n      {filmsData.error && <h2>Something went wrong...</h2>}\n      {Boolean(filmsData.films.length) && (\n        <FilmsList films={filmsData.films} filmIdFunc={filmIdFunc} />\n      )}\n    </>\n  );\n};\n\nexport default TrendingMovies;\n\nTrendingMovies.propTypes = {\n  filmIdFunc: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport TrendingMovies from \"../../components/TrendingMovies/TrendingMovies\";\n\nconst HomePage = ({filmIdFunc}) => {\n    return(\n        <TrendingMovies filmIdFunc={filmIdFunc}/>\n    )\n}\n\nexport default HomePage;\n\nHomePage.propTypes = {\n    filmIdFunc: PropTypes.func.isRequired\n}"],"names":["films","filmIdFunc","from","useLocation","partOfCode","map","film","className","style","onClick","id","to","state","poster_path","src","alt","loading","title","original_name","useState","error","filmsData","setFilmsData","prevState","getTrendingFilms","data","results","console","log","useEffect","takeFetchData","Boolean","length","FilmsList"],"sourceRoot":""}